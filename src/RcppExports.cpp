// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/tipixel.h"
#include <Rcpp.h>

using namespace Rcpp;

// collage
NumericVector collage(List tiles, int width, int height, IntegerVector best_tiles, int tile_dim);
RcppExport SEXP tipixel_collage(SEXP tilesSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP best_tilesSEXP, SEXP tile_dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type tiles(tilesSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type best_tiles(best_tilesSEXP);
    Rcpp::traits::input_parameter< int >::type tile_dim(tile_dimSEXP);
    rcpp_result_gen = Rcpp::wrap(collage(tiles, width, height, best_tiles, tile_dim));
    return rcpp_result_gen;
END_RCPP
}
// make_tile
List make_tile(NumericVector img, int size);
RcppExport SEXP tipixel_make_tile(SEXP imgSEXP, SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(make_tile(img, size));
    return rcpp_result_gen;
END_RCPP
}
// find_best_tiles
IntegerVector find_best_tiles(NumericVector img, int width, int height, DataFrame base);
RcppExport SEXP tipixel_find_best_tiles(SEXP imgSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP baseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type base(baseSEXP);
    rcpp_result_gen = Rcpp::wrap(find_best_tiles(img, width, height, base));
    return rcpp_result_gen;
END_RCPP
}
// gridize_cpp
NumericVector gridize_cpp(NumericVector img, int width, int height, int size, NumericVector rgb);
RcppExport SEXP tipixel_gridize_cpp(SEXP imgSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP sizeSEXP, SEXP rgbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rgb(rgbSEXP);
    rcpp_result_gen = Rcpp::wrap(gridize_cpp(img, width, height, size, rgb));
    return rcpp_result_gen;
END_RCPP
}
